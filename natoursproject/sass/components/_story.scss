/*
  _story.scss is the Sass code responsible for the user stories (trapezoid boxes with
  circular photos) displayed in the 'Stories' section. It is a self contained reusable
  component. It therefore belongs to the 'components' directory.
 */

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba($color-black, .1);
  background-color: $color-white;
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: $default-font-size;

  //skew into the trapezoid shape. The child will need to be skewed in the opposite
  //direction
  transform: skewX(-12deg);

  //& > * { //select the direct child
  //  transform: skewX(12deg) //skew in the opposite direction to level out the element.
  //}

  &__shape {
    width: 15rem;
    height: 15rem;
    float: left; //Makes the other content float around this one, i.e. to the left.

    /*
      Using the shape-outside property to wrap the other elements around it. Similar
      to the polygon function used when clipping, we're using the circle function
      to define the circle. The first arg is the radius. If you specify 50%, it
      will be half of the containing element, in this case that will be 15/2 = 7.5rem.
      The diameter will therefore be 2*radius which is the size of the enclosing
      element, i.e. 15rem;
      The second arg is the co-ordinate of the centre of the circle. Again, by making
      it 50% 50%, it exactly in the middle.
      The shape-outside property only works if it is FLOATED and has DEFINED DIMENSIONS,
      i.e. the width and height are specified.
     */
    -webkit-shape-outside: circle(50% at 50% 50%); //for Safari support.
    shape-outside: circle(50% at 50% 50%);

    -webkit-clip-path: circle(50% at 50% 50%); //for Safari support.
    clip-path: circle(50% at 50% 50%); //creates the actual circle shape

    /*
      This transform takes precedence over the transform specified in the direct
      child selector on line 21 because it is more specific (narrower scope).
      Therefore, the child selector does not work and is commented out.
      The skew needs to be manually added here.
    */
    transform: translateX(-3rem) skewX(12deg);
  }

  &__img {
    //height is used because the actual image is wider than it's height so using
    //100% width does not render the entire image in the circle.
    height: 100%; //100% of the parent, i.e. 15rem (the height of the story__shape
  }

  &__text {
    /*
      skew needs to be manually added here because the direct child selector
      will not work because the transform trying to be applied is overriden by
      the one in the &__shape selector. Therefore the children need to have the skew
      set manually.
     */
    transform: skewX(12deg)
  }
}