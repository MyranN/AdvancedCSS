.navigation {

  /*
    The original checkbox that the custom button is linked to via a label.
   */
  &__checkbox {
    //hide the original checkbox that the label is linked to, and replace with
    //the custom button. Similar to what was done with the form radio buttons.
    display: none;
  }

  /*
    The toggle button to open the navigation screen.
   */
  &__button {
    background-color: $color-white;
    height: 7rem; //hides the green background circle (6rem) defined below.
    width: 7rem;
    position: fixed;
    top: 6rem;
    right: 6rem;
    border-radius: 50%;
    z-index: 2000;
    box-shadow: 0 1rem 3rem rgba($color-black, .1);
  }

  /*
    The green circle that sits behind the button so that when the button is
    clicked, it gives the expanding effect into the navigation screen using
    a radial gradient/circular gradient.
   */
  &__background {
    height: 6rem;
    width: 6rem;
    border-radius: 50%;
    z-index: 1000;

    /*
      Fixed essentially means it doesn't move as you scroll
      the page. It's also like absolute in that it takes the
      element out of the flow and can be positioned using
      the top,left,right and bottom properties.
     */
    position: fixed;
    top: 6.5rem;
    right: 6.5rem;
    /*
      Radial gradients starts in the middle and expands outwards in a circle.
     */
    background-image: radial-gradient($color-primary-light, $color-primary-dark);

    /*
      Easing function to specify how much change occurs over time. The easing
      function is the cubic-bezier function (can be googled for various numbers
      for the bezier curve you want)
     */
    transition: transform .8s cubic-bezier(0.86, 0, 0.07, 1);
  }

  /*
    This is the navigation screen. It is a container for navigation list
    of items.
    Cover the entire viewport (hence 100vh) with the gradient background.
   */
  &__nav {
    height: 100vh;
    position: fixed;
    top: 0;
    right: 0;
    z-index: 1500;

    //hide navigation menu and background. They should appear when
    //the button navigation button is clicked.
    opacity: 0;
    width: 0;

    transition: all .8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  /*
    Container for the navigation items. It is centered in the middle.
   */
  &__list {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    list-style: none; //remove default bullet styling.
    text-align: center;
    width: 100%;
  }

  &__item {
    margin: 1rem;
  }

  &__link {

    &:link,
    &:visited {
      display: inline-block; //ensures padding is applied correctly and translations are correct.
      font-size: 3rem;
      font-weight: 300;
      padding: 1rem 2rem;
      color: $color-white;
      text-decoration: none;
      text-transform: uppercase;

      /*
      Use solid color gradient to give white angled box animation effect.
      First rotate by 120deg to give slope/angled box. Then provide gradient
      colors at various widths. At 0% width, the color is TRANSPARENT.
      It is also TRANSPARENT at 50%. So it is a solid gradient from 0-50%.
      Then 50% onwards, it is WHITE therefore another solid gradient from
      50-100.
      If the background size initial state was 100%, then the TRANSPARENT
      and WHITE sides would occupy 50% of container (in this case, the list
      item) as per the linear gradient setting. If the background size is
      set to 200%, the WHITE is completely gone. In fact it has just
      expanded outside of the container and is no longer visible.
      This is the crux of the animation. I.e. the background position can
      be adjusted when hovering to bring the WHITE side back into view
      (back into the container). See hover pseudo class below.
       */
      background-image: linear-gradient(120deg, transparent 0%, transparent 50%, $color-white 50%);
      background-size: 220%;
      transition: all .4s;

      span {
        margin-right: 1.5rem;
        display: inline-block;
      }
    }

    /*
      Need to review why this works
     */
    &:hover,
    &:active {
      background-position: 100%;
      color: $color-primary;
      transform: translateX(1rem);
    }
  }

  /*
      Checkbox hack. Select the background when the original checkbox is
      checked.
     */
  &__checkbox:checked ~ &__background {
    transform: scale(60);
  }

  &__checkbox:checked ~ &__nav {
    opacity: 1;
    width: 100%;
  }
}