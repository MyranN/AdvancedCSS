/*
  _home.scss holds the Sass code related to the home page or landing page of the
  website. It belongs to the 'pages' directory as it is Sass code related to a
  particular page.
*/

.section-about {
  background-color: $color-grey-light-1;
  padding: 25rem 0;

  /*
    The background is set to grey which means that the triangle/wedge
    clipped from the bottom of the title view is mismatched because
    it will be white. We know from the _header.scss file that the height
    of the header is 95vh or 95% of the viewport height. We also know
    that the polygon clipped to create the wedge is 75vh or 75% of the
    viewport. Therefore the wedge height is 20vh and we move this section
    up using negative top margin by that amount in order to fill the color
    with light-grey as per this section.
   */
  margin-top: -20vh;

  @include respond(tab-port) {
    padding: 20rem 0;
  }
}

.section-features {
  padding: 20rem 0;

  /*
    This is similar sass code used for the background image in the _header.scss
    file
   */
  background-image: linear-gradient(
                  to right bottom,
                  rgba($color-primary-light, 0.8),
                  rgba($color-primary-dark,0.8)),
                  url('../img/nat-4.jpg');
  background-size: cover; //image should cover the entire container

  margin-top: -10rem; //move the section up to cover the white space revealed by the skew below
  transform: skewY(-7deg); //skews the entire section by -7degrees

  /*
    This is the 'direct child selector' and is used to select the direct children
    of the element with this class (i.e. section-features).
    The * in the selector below is the universal selector, the '>' denote the direct child.
    Therefore this evaluates to: 'select all (*) direct children (>)'.

    I.e.:
      '& > *' == 'Select all direct children'
      '& *'   == 'Select all children'
   */
  & > * {
    transform: skewY(7deg) //skew the direct children 7degrees to offset the parent skew of -7.
  }

  @include respond(tab-port) {
    padding: 10rem 0;
  }
}

.section-tours {
  background-color: $color-grey-light-1;
  padding: 25rem 0 15rem 0;
  margin-top: -10rem;

  @include respond(tab-port) {
    padding: 20rem 0 10rem 0;
  }
}

.section-stories {
  padding: 15rem 0;
  //Set position relative in order for bg-video container
  // (the child element) to be placed correctly which uses
  //absolute positioning.
  position: relative;

  @include respond(tab-port) {
    padding: 10rem 0;
  }
}

.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);

  @include respond(tab-port) {
    padding: 10rem 0;
  }
}

.book {
  /*
    Specifying a gradient that sits on top of the image. The first arg of the
    linear-gradient is the direction. This can be provided in words, i.e.
    "to right bottom" or it can be specified in degrees. By default the gradient is
    bottom to top but by rotation this goes from left to right.
    The angle of 105 degrees ends up producing the diagonal line.
    The linear gradient allows you to specify multiple colors and at what percentage
    of the image that gradient should extend to. So below, the gradient start at 0%
    width with a white color. Then at 50% width,the color is also white. So there is a
    white-to-white gradient from 0% to 50%. Then from 50% onwards, there is no gradient,
    i.e, complete transparency to give the end result.
   */
  background-image: linear-gradient(
                  105deg,
                  rgba($color-white, .9) 0% ,
                  rgba($color-white, .9) 50% ,
                  rgba($color-white, 0) 50% //can also replace this line with 'transparent 50%'
                  ), url(../img/nat-10.jpg);
  background-size: cover; //can also use 100%
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba($color-black, .2);

  height: 50rem;

  &__form {
    width: 50%;
    padding: 6rem;
  }
}